variables:
  ARTEFACT_NAME: main-v$CI_PIPELINE_IID.py
  APP_NAME: car-api
  ENVIRONMENT_NAME: Car-api-production

stages:
  - test
  - deploy
  - postman test
  - deploy aws

image: python:latest

.dependencies:
  before_script:
    - pip install -r requirements.txt
    - pip install pytest

smoke test:
  extends: .dependencies
  stage: test
  script:
    - python main.py &
    - sleep 20
    - curl http://localhost:5000/api/health | grep "UP"

unit test:
  extends: .dependencies
  stage: test
  script:
    - python -m unittest tests/test_get_highest_id_car.py
    - python -m pytest --junitxml=report.xml
  artifacts:
    when: always
    reports:
      junit: report.xml

.test api:
  stage: postman test
  image:
    name : postman/newman
    entrypoint: [""]
  script:
    - newman --version
    - npm install -g newman-reporter-htmlextra
    - newman run "data/My Cars API.postman_collection.json" -e data/Localhost.postman_environment.json --reporters cli, htmlextra, junit --reporter-htmlextra-export "newman/report.html" --reporter-junit-export "newman/report.xml"
  artifacts:
    when: always
    paths:
      - newman/
    reports:
      junit: newman/report.xml

deploy aws:
  image:
    name: amazon/aws-cli
    entrypoint: [""]
  stage: deploy aws
  script:
    - echo "Deploying cars api into Elastic Beanstalk"
    - aws configure set region eu-west-3
    - aws s3 cp ./main.py s3://$S3_BUCKET/$ARTEFACT_NAME
    - aws elasticbeanstalk create-application-version --application-name $APP_NAME --version-label $CI_PIPELINE_IID --source-bundle S3Bucket=$S3_BUCKET,S3Key=$ARTEFACT_NAME
    - aws elasticbeanstalk update-environment --application-name $APP_NAME --environment-name $ENVIRONMENT_NAME --version-label $CI_PIPELINE_IID